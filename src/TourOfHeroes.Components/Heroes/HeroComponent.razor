@using BlazorState;
@using TourOfHeroes.Data
@using TourOfHeroes.Components.Heroes.State
@using TourOfHeroes.Components.Heroes.Validation

@inherits BlazorStateComponent

<h3>My Heroes</h3>

<form class="form-inline">
    <EditForm Model="@hero" OnValidSubmit="@HandleValidSubmit">
        <FluentValidator TValidator="HeroValidation" />
        <ValidationSummary />

        <InputText id="name" @bind-Value="@hero.Name" class="form-control" type="text" />

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</form>

<hr />

<div class="card" style="width: 18rem;">
  <ul class="list-group list-group-flush">
    @foreach (var hero in heroState.Heroes)
    {
        <li class="list-group-item">
            @hero.Name
        </li>
    }
  </ul>
</div>

@code {
    HeroState heroState => GetState<HeroState>();
    Hero hero = new Hero();

    protected void HandleValidSubmit()
    {
        Mediator.Send(new AddAction(hero.Name));
        hero.Name = string.Empty;
    }

    protected override void OnInitialized()
    {
        Mediator.Send(new LoadAction());
    }
}
